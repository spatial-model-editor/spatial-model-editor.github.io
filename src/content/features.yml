page_title: Features

features:
  - id: gui
    title: User friendly GUI interface
    description: >
      Creating, editing and simulating a spatial model is all done using a user friendly Graphical User Interface.
      See the <a href="https://spatial-model-editor.readthedocs.io/en/stable/quickstart/get-started.html">Getting Started</a> section
      in the documentation to learn more.
    images:
      - screenshots/geometry0.png
      - screenshots/geometry1.png
      - screenshots/geometry2.png
      - screenshots/species0.png
      - screenshots/species1.png
      - screenshots/species2.png
      - screenshots/reactions.png
      - screenshots/simulation.png

  - id: dune
    title: DuneCopasi FEM Solver
    description: >
      The <a href="https://dune-copasi.netlify.app">dune-copasi</a> solver is used to simulate models.
      This solves the PDE on a triangular mesh using finite element discretization methods.
      See the <a href="https://spatial-model-editor.readthedocs.io/en/stable/reference/dune.html">simulator documentation</a>
      for more information on the available options when using it in the GUI.
      For more technical information about the DuneCopasi solver itself,
      see the <a href="https://dune-copasi.netlify.app">dune-copasi</a> website.
    images:
      - dune/dune-copasi.svg

  - id: mesh
    title: Automatic mesh generation
    description: >
      Starting from a segmented image of the compartments in the model,
      the boundaries are automatically identified and simplified,
      and from them a triangular mesh approximation to the geometry is constructed.
      The number of points used in each boundary line, and the maximum triangle size in each compartment, can then be adjusted by the user.
      For more details see the <a href="https://spatial-model-editor.readthedocs.io/en/stable/reference/mesh.html">mesh documentation</a>.
    images:
      - mesh/mesh_original_image.png
      - mesh/mesh_pixel_contours.png
      - mesh/mesh_split_edge_contours.png
      - mesh/mesh_simplify_lines.png
      - mesh/mesh_triangulate_0.png
      - mesh/mesh_triangulate_1.png
      - mesh/mesh_triangulate_2.png
      - mesh/mesh_triangulate_3.png

  - id: sme
    title: Python interface
    description: >
      The Python interface, <a href="https://pypi.org/project/sme">sme</a>, allows scripted editing and simulation of a model.
      Simulation results are returned as numpy arrays to allow for easy further processing or analysis.
      See the <a href="https://spatial-model-editor.readthedocs.io/en/stable/sme/notebooks.html#example-notebooks">Example Notebooks</a>
      or the <a href="https://spatial-model-editor.readthedocs.io/en/stable/sme/api.html">API reference</a> for more information.
      Additional plotting and parameter fitting functionality is provided by <a href="https://pypi.org/project/sme-contrib">sme-contrib</a>,
      whose <a href="https://sme-contrib.readthedocs.io/en/latest/">documentation</a> also contains example notebooks.
    images:
      - sme-pypi.png

  - id: pixel
    title: Pixel FCTS Solver
    description: >
      The <a href="https://spatial-model-editor.readthedocs.io/en/stable/reference/pixel.html">Pixel</a>
      solver is an alternative solver which uses the <a href="https://en.wikipedia.org/wiki/FTCS_scheme">FTCS</a>
      method to solve the PDE using the pixels of the geometry image as the grid.
      It features automatic timestep control and multi-threading support.
    images:
      - pixel/convergence.png
      - pixel/embedded.png
      - pixel/runtime.png
      - pixel/pixel_options.png
